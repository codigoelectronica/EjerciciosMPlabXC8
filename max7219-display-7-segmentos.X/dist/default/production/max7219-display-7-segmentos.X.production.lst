

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Sep 18 16:41:34 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	strings
   175  0003                     __pstrings:	
   176  0003                     stringtab:	
   177  0003                     __stringtab:	
   178  0003                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181  0003                     stringdir:	
   182  0003  3000               	movlw	high stringdir
   183  0004  008A               	movwf	10
   184  0005  0804               	movf	4,w
   185  0006  0A84               	incf	4,f
   186  0007  0782               	addwf	2,f
   187  0008                     __stringbase:	
   188  0008  3400               	retlw	0
   189  0009                     __end_of__stringtab:	
   190  0009                     _digitos:	
   191  0009  347E               	retlw	126
   192  000A  3430               	retlw	48
   193  000B  346D               	retlw	109
   194  000C  3479               	retlw	121
   195  000D  3433               	retlw	51
   196  000E  345B               	retlw	91
   197  000F  345F               	retlw	95
   198  0010  3470               	retlw	112
   199  0011  347F               	retlw	127
   200  0012  347B               	retlw	123
   201  0013                     __end_of_digitos:	
   202  0007                     _PORTCbits	set	7
   203  0086                     _TRISB	set	134
   204  0087                     _TRISCbits	set	135
   205                           
   206                           ; #config settings
   207  0000                     
   208                           	psect	cinit
   209  07FC                     start_initialization:	
   210  07FC                     __initialization:	
   211  07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214  07FC                     __end_of__initialization:	
   215  07FC  0183               	clrf	3
   216  07FD  120A  118A  2EC7   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_max7219_WriteBits:	
   221  0070                     ?_max7219_Config:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_max7219_Clear:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?_main:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ?___awdiv:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?___awmod:	
   234                           ; 2 bytes @ 0x0
   235                           
   236  0070                     max7219_WriteBits@valor:	
   237                           ; 2 bytes @ 0x0
   238                           
   239  0070                     ___awdiv@divisor:	
   240                           ; 2 bytes @ 0x0
   241                           
   242  0070                     ___awmod@divisor:	
   243                           ; 2 bytes @ 0x0
   244                           
   245                           
   246                           ; 2 bytes @ 0x0
   247  0070                     	ds	2
   248  0072                     ??_max7219_WriteBits:	
   249  0072                     ___awdiv@dividend:	
   250                           ; 1 bytes @ 0x2
   251                           
   252  0072                     ___awmod@dividend:	
   253                           ; 2 bytes @ 0x2
   254                           
   255                           
   256                           ; 2 bytes @ 0x2
   257  0072                     	ds	2
   258  0074                     ??___awdiv:	
   259  0074                     ??___awmod:	
   260                           ; 1 bytes @ 0x4
   261                           
   262                           
   263                           ; 1 bytes @ 0x4
   264  0074                     	ds	1
   265  0075                     ___awdiv@counter:	
   266  0075                     ___awmod@counter:	
   267                           ; 1 bytes @ 0x5
   268                           
   269  0075                     max7219_WriteBits@temporal:	
   270                           ; 1 bytes @ 0x5
   271                           
   272                           
   273                           ; 2 bytes @ 0x5
   274  0075                     	ds	1
   275  0076                     ___awdiv@sign:	
   276  0076                     ___awmod@sign:	
   277                           ; 1 bytes @ 0x6
   278                           
   279                           
   280                           ; 1 bytes @ 0x6
   281  0076                     	ds	1
   282  0077                     max7219_WriteBits@c:	
   283  0077                     ___awdiv@quotient:	
   284                           ; 1 bytes @ 0x7
   285                           
   286                           
   287                           ; 2 bytes @ 0x7
   288  0077                     	ds	1
   289  0078                     ?_max7219_WriteComando:	
   290  0078                     ?_max7219_WriteDigito:	
   291                           ; 1 bytes @ 0x8
   292                           
   293  0078                     max7219_WriteDigito@valorDeDigito:	
   294                           ; 1 bytes @ 0x8
   295                           
   296  0078                     max7219_WriteComando@valorDeComando:	
   297                           ; 1 bytes @ 0x8
   298                           
   299                           
   300                           ; 1 bytes @ 0x8
   301  0078                     	ds	1
   302  0079                     ??_max7219_WriteComando:	
   303  0079                     ??_max7219_WriteDigito:	
   304                           ; 1 bytes @ 0x9
   305                           
   306                           
   307                           ; 1 bytes @ 0x9
   308  0079                     	ds	2
   309  007B                     max7219_WriteDigito@digito:	
   310  007B                     max7219_WriteComando@comando:	
   311                           ; 1 bytes @ 0xB
   312                           
   313                           
   314                           ; 1 bytes @ 0xB
   315  007B                     	ds	1
   316  007C                     max7219_WriteDigito@temporal:	
   317  007C                     max7219_WriteComando@temporal:	
   318                           ; 2 bytes @ 0xC
   319                           
   320                           
   321                           ; 2 bytes @ 0xC
   322  007C                     	ds	2
   323                           
   324                           	psect	cstackBANK0
   325  0020                     __pcstackBANK0:	
   326  0020                     ??_max7219_Config:	
   327  0020                     ??_max7219_Clear:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0020                     	ds	1
   333  0021                     max7219_Clear@i:	
   334                           
   335                           ; 1 bytes @ 0x1
   336  0021                     	ds	1
   337  0022                     ?_displayNumber:	
   338  0022                     displayNumber@number:	
   339                           ; 1 bytes @ 0x2
   340                           
   341                           
   342                           ; 2 bytes @ 0x2
   343  0022                     	ds	2
   344  0024                     ??_displayNumber:	
   345                           
   346                           ; 1 bytes @ 0x4
   347  0024                     	ds	1
   348  0025                     displayNumber@result:	
   349                           
   350                           ; 2 bytes @ 0x5
   351  0025                     	ds	2
   352  0027                     displayNumber@pos:	
   353                           
   354                           ; 2 bytes @ 0x7
   355  0027                     	ds	2
   356  0029                     ??_main:	
   357                           
   358                           ; 1 bytes @ 0x9
   359  0029                     	ds	3
   360  002C                     main@i:	
   361                           
   362                           ; 2 bytes @ 0xC
   363  002C                     	ds	2
   364                           
   365                           	psect	maintext
   366  06C7                     __pmaintext:	
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 9 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  i               2   12[BANK0 ] int 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : B00/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   386 ;;      Params:         0       0       0       0       0
   387 ;;      Locals:         0       2       0       0       0
   388 ;;      Temps:          0       3       0       0       0
   389 ;;      Totals:         0       5       0       0       0
   390 ;;Total ram usage:        5 bytes
   391 ;; Hardware stack levels required when called:    4
   392 ;; This function calls:
   393 ;;		_displayNumber
   394 ;;		_max7219_Clear
   395 ;;		_max7219_Config
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  06C7                     _main:	
   404                           
   405                           ;main.c: 10:     TRISB = 0;
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   409  06C7  1683               	bsf	3,5	;RP0=1, select bank1
   410  06C8  1303               	bcf	3,6	;RP1=0, select bank1
   411  06C9  0186               	clrf	6	;volatile
   412                           
   413                           ;main.c: 11:     max7219_Config();
   414  06CA  120A  118A  2654  120A  118A  	fcall	_max7219_Config
   415                           
   416                           ;main.c: 13:     max7219_Clear();
   417  06CF  120A  118A  25EA  120A  118A  	fcall	_max7219_Clear
   418                           
   419                           ;main.c: 15:     for(int i = 0; i < 9999; i++) {
   420  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   421  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   422  06D6  01AC               	clrf	main@i
   423  06D7  01AD               	clrf	main@i+1
   424  06D8                     l995:	
   425                           
   426                           ;main.c: 16:         displayNumber(i);
   427  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   428  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   429  06DA  082D               	movf	main@i+1,w
   430  06DB  00A3               	movwf	displayNumber@number+1
   431  06DC  082C               	movf	main@i,w
   432  06DD  00A2               	movwf	displayNumber@number
   433  06DE  120A  118A  2752  120A  118A  	fcall	_displayNumber
   434                           
   435                           ;main.c: 17:         _delay((unsigned long)((2000)*(20000000/4000.0)));
   436  06E3  3033               	movlw	51
   437  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   438  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   439  06E6  00AB               	movwf	??_main+2
   440  06E7  30BB               	movlw	187
   441  06E8  00AA               	movwf	??_main+1
   442  06E9  30DF               	movlw	223
   443  06EA  00A9               	movwf	??_main
   444  06EB                     u557:	
   445  06EB  0BA9               	decfsz	??_main,f
   446  06EC  2EEB               	goto	u557
   447  06ED  0BAA               	decfsz	??_main+1,f
   448  06EE  2EEB               	goto	u557
   449  06EF  0BAB               	decfsz	??_main+2,f
   450  06F0  2EEB               	goto	u557
   451                           
   452                           ;main.c: 18:     }
   453  06F1  3001               	movlw	1
   454  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   455  06F3  1303               	bcf	3,6	;RP1=0, select bank0
   456  06F4  07AC               	addwf	main@i,f
   457  06F5  1803               	skipnc
   458  06F6  0AAD               	incf	main@i+1,f
   459  06F7  3000               	movlw	0
   460  06F8  07AD               	addwf	main@i+1,f
   461  06F9  082D               	movf	main@i+1,w
   462  06FA  3A80               	xorlw	128
   463  06FB  00FF               	movwf	127
   464  06FC  30A7               	movlw	167
   465  06FD  027F               	subwf	127,w
   466  06FE  1D03               	skipz
   467  06FF  2F02               	goto	u545
   468  0700  300F               	movlw	15
   469  0701  022C               	subwf	main@i,w
   470  0702                     u545:	
   471  0702  1C03               	skipc
   472  0703  2ED8               	goto	l995
   473  0704  120A  118A  2800   	ljmp	start
   474  0707                     __end_of_main:	
   475                           
   476                           	psect	text1
   477  0654                     __ptext1:	
   478 ;; *************** function _max7219_Config *****************
   479 ;; Defined at:
   480 ;;		line 51 in file "./max7219.h"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       1       0       0       0
   497 ;;      Totals:         0       1       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		_max7219_WriteComando
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _max7219_Config
   510  0654                     _max7219_Config:	
   511                           
   512                           ;./max7219.h: 52:     TRISCbits.TRISC5 = 0;
   513                           
   514                           ;incstack = 0
   515                           ; Regs used in _max7219_Config: [wreg+status,2+status,0+pclath+cstack]
   516  0654  1683               	bsf	3,5	;RP0=1, select bank1
   517  0655  1303               	bcf	3,6	;RP1=0, select bank1
   518  0656  1287               	bcf	7,5	;volatile
   519                           
   520                           ;./max7219.h: 53:     TRISCbits.TRISC7 = 0;
   521  0657  1387               	bcf	7,7	;volatile
   522                           
   523                           ;./max7219.h: 54:     TRISCbits.TRISC6 = 0;
   524  0658  1307               	bcf	7,6	;volatile
   525                           
   526                           ;./max7219.h: 56:     PORTCbits.RC5 = 0;
   527  0659  1283               	bcf	3,5	;RP0=0, select bank0
   528  065A  1303               	bcf	3,6	;RP1=0, select bank0
   529  065B  1287               	bcf	7,5	;volatile
   530                           
   531                           ;./max7219.h: 57:     PORTCbits.RC7 = 0;
   532  065C  1387               	bcf	7,7	;volatile
   533                           
   534                           ;./max7219.h: 58:     PORTCbits.RC6 = 1;
   535  065D  1707               	bsf	7,6	;volatile
   536                           
   537                           ;./max7219.h: 60:     max7219_WriteComando(0x0C, 0x00);
   538  065E  01F8               	clrf	max7219_WriteComando@valorDeComando
   539  065F  300C               	movlw	12
   540  0660  120A  118A  25FF  120A  118A  	fcall	_max7219_WriteComando
   541                           
   542                           ;./max7219.h: 61:     max7219_WriteComando(0x0F, 0x00);
   543  0665  01F8               	clrf	max7219_WriteComando@valorDeComando
   544  0666  300F               	movlw	15
   545  0667  120A  118A  25FF  120A  118A  	fcall	_max7219_WriteComando
   546                           
   547                           ;./max7219.h: 62:     max7219_WriteComando(0x0A, 0x0F);
   548  066C  300F               	movlw	15
   549  066D  1283               	bcf	3,5	;RP0=0, select bank0
   550  066E  1303               	bcf	3,6	;RP1=0, select bank0
   551  066F  00A0               	movwf	??_max7219_Config
   552  0670  0820               	movf	??_max7219_Config,w
   553  0671  00F8               	movwf	max7219_WriteComando@valorDeComando
   554  0672  300A               	movlw	10
   555  0673  120A  118A  25FF  120A  118A  	fcall	_max7219_WriteComando
   556                           
   557                           ;./max7219.h: 63:     max7219_WriteComando(0x0B, 0x07);
   558  0678  3007               	movlw	7
   559  0679  1283               	bcf	3,5	;RP0=0, select bank0
   560  067A  1303               	bcf	3,6	;RP1=0, select bank0
   561  067B  00A0               	movwf	??_max7219_Config
   562  067C  0820               	movf	??_max7219_Config,w
   563  067D  00F8               	movwf	max7219_WriteComando@valorDeComando
   564  067E  300B               	movlw	11
   565  067F  120A  118A  25FF  120A  118A  	fcall	_max7219_WriteComando
   566                           
   567                           ;./max7219.h: 64:     max7219_WriteComando(0x0C, 0x01);
   568  0684  01F8               	clrf	max7219_WriteComando@valorDeComando
   569  0685  0AF8               	incf	max7219_WriteComando@valorDeComando,f
   570  0686  300C               	movlw	12
   571  0687  120A  118A  25FF   	fcall	_max7219_WriteComando
   572  068A  0008               	return
   573  068B                     __end_of_max7219_Config:	
   574                           
   575                           	psect	text2
   576  05FF                     __ptext2:	
   577 ;; *************** function _max7219_WriteComando *****************
   578 ;; Defined at:
   579 ;;		line 105 in file "./max7219.h"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  comando         1    wreg     unsigned char 
   582 ;;  valorDeComan    1    8[COMMON] unsigned char 
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  comando         1   11[COMMON] unsigned char 
   585 ;;  temporal        2   12[COMMON] volatile unsigned int 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         1       0       0       0       0
   596 ;;      Locals:         3       0       0       0       0
   597 ;;      Temps:          2       0       0       0       0
   598 ;;      Totals:         6       0       0       0       0
   599 ;;Total ram usage:        6 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    1
   602 ;; This function calls:
   603 ;;		_max7219_WriteBits
   604 ;; This function is called by:
   605 ;;		_max7219_Config
   606 ;;		_max7219_Intensity
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _max7219_WriteComando
   612  05FF                     _max7219_WriteComando:	
   613                           
   614                           ;incstack = 0
   615                           ; Regs used in _max7219_WriteComando: [wreg+status,2+status,0+pclath+cstack]
   616                           ;max7219_WriteComando@comando stored from wreg
   617  05FF  00FB               	movwf	max7219_WriteComando@comando
   618                           
   619                           ;./max7219.h: 106:     volatile unsigned int temporal = 0;
   620  0600  01FC               	clrf	max7219_WriteComando@temporal	;volatile
   621  0601  01FD               	clrf	max7219_WriteComando@temporal+1	;volatile
   622                           
   623                           ;./max7219.h: 107:     temporal = comando;
   624  0602  087B               	movf	max7219_WriteComando@comando,w
   625  0603  00F9               	movwf	??_max7219_WriteComando
   626  0604  01FA               	clrf	??_max7219_WriteComando+1
   627  0605  0879               	movf	??_max7219_WriteComando,w
   628  0606  00FC               	movwf	max7219_WriteComando@temporal	;volatile
   629  0607  087A               	movf	??_max7219_WriteComando+1,w
   630  0608  00FD               	movwf	max7219_WriteComando@temporal+1	;volatile
   631                           
   632                           ;./max7219.h: 108:     temporal = temporal << 8;
   633  0609  087C               	movf	max7219_WriteComando@temporal,w	;volatile
   634  060A  00FA               	movwf	??_max7219_WriteComando+1
   635  060B  01F9               	clrf	??_max7219_WriteComando
   636  060C  0879               	movf	??_max7219_WriteComando,w
   637  060D  00FC               	movwf	max7219_WriteComando@temporal	;volatile
   638  060E  087A               	movf	??_max7219_WriteComando+1,w
   639  060F  00FD               	movwf	max7219_WriteComando@temporal+1	;volatile
   640                           
   641                           ;./max7219.h: 109:     temporal = temporal & 0x0F00;
   642  0610  3000               	movlw	0
   643  0611  057C               	andwf	max7219_WriteComando@temporal,w	;volatile
   644  0612  00FC               	movwf	max7219_WriteComando@temporal	;volatile
   645  0613  300F               	movlw	15
   646  0614  057D               	andwf	max7219_WriteComando@temporal+1,w	;volatile
   647  0615  00FD               	movwf	max7219_WriteComando@temporal+1	;volatile
   648                           
   649                           ;./max7219.h: 110:     temporal = temporal | valorDeComando;
   650  0616  087C               	movf	max7219_WriteComando@temporal,w	;volatile
   651  0617  0478               	iorwf	max7219_WriteComando@valorDeComando,w
   652  0618  00FC               	movwf	max7219_WriteComando@temporal	;volatile
   653  0619  087D               	movf	max7219_WriteComando@temporal+1,w	;volatile
   654  061A  00FD               	movwf	max7219_WriteComando@temporal+1	;volatile
   655                           
   656                           ;./max7219.h: 111:     max7219_WriteBits(temporal);
   657  061B  087D               	movf	max7219_WriteComando@temporal+1,w	;volatile
   658  061C  00F1               	movwf	max7219_WriteBits@valor+1
   659  061D  087C               	movf	max7219_WriteComando@temporal,w	;volatile
   660  061E  00F0               	movwf	max7219_WriteBits@valor
   661  061F  120A  118A  268B   	fcall	_max7219_WriteBits
   662  0622  0008               	return
   663  0623                     __end_of_max7219_WriteComando:	
   664                           
   665                           	psect	text3
   666  0752                     __ptext3:	
   667 ;; *************** function _displayNumber *****************
   668 ;; Defined at:
   669 ;;		line 22 in file "main.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  number          2    2[BANK0 ] int 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  pos             2    7[BANK0 ] int 
   674 ;;  result          2    5[BANK0 ] int 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       2       0       0       0
   685 ;;      Locals:         0       4       0       0       0
   686 ;;      Temps:          0       1       0       0       0
   687 ;;      Totals:         0       7       0       0       0
   688 ;;Total ram usage:        7 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    3
   691 ;; This function calls:
   692 ;;		___awdiv
   693 ;;		___awmod
   694 ;;		_max7219_Clear
   695 ;;		_max7219_WriteDigito
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _displayNumber
   703  0752                     _displayNumber:	
   704                           
   705                           ;main.c: 23:     int result;;main.c: 24:     int pos = 0 ;
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _displayNumber: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   709  0752  1283               	bcf	3,5	;RP0=0, select bank0
   710  0753  1303               	bcf	3,6	;RP1=0, select bank0
   711  0754  01A7               	clrf	displayNumber@pos
   712  0755  01A8               	clrf	displayNumber@pos+1
   713                           
   714                           ;main.c: 25:     max7219_Clear();
   715  0756  120A  118A  25EA  120A  118A  	fcall	_max7219_Clear
   716  075B                     l977:	
   717                           ;main.c: 26:     while ( number > 0 ) {
   718                           
   719                           
   720                           ;main.c: 26:     while ( number > 0 ) {
   721  075B  1283               	bcf	3,5	;RP0=0, select bank0
   722  075C  1303               	bcf	3,6	;RP1=0, select bank0
   723  075D  0823               	movf	displayNumber@number+1,w
   724  075E  3A80               	xorlw	128
   725  075F  00FF               	movwf	127
   726  0760  3080               	movlw	128
   727  0761  027F               	subwf	127,w
   728  0762  1D03               	skipz
   729  0763  2F66               	goto	u525
   730  0764  3001               	movlw	1
   731  0765  0222               	subwf	displayNumber@number,w
   732  0766                     u525:	
   733  0766  1C03               	btfss	3,0
   734  0767  0008               	return
   735                           
   736                           ;main.c: 27:         result = number % 10 ;
   737  0768  300A               	movlw	10
   738  0769  00F0               	movwf	___awmod@divisor
   739  076A  3000               	movlw	0
   740  076B  00F1               	movwf	___awmod@divisor+1
   741  076C  1283               	bcf	3,5	;RP0=0, select bank0
   742  076D  1303               	bcf	3,6	;RP1=0, select bank0
   743  076E  0823               	movf	displayNumber@number+1,w
   744  076F  00F3               	movwf	___awmod@dividend+1
   745  0770  0822               	movf	displayNumber@number,w
   746  0771  00F2               	movwf	___awmod@dividend
   747  0772  120A  118A  2707  120A  118A  	fcall	___awmod
   748  0777  0871               	movf	?___awmod+1,w
   749  0778  1283               	bcf	3,5	;RP0=0, select bank0
   750  0779  1303               	bcf	3,6	;RP1=0, select bank0
   751  077A  00A6               	movwf	displayNumber@result+1
   752  077B  0870               	movf	?___awmod,w
   753  077C  00A5               	movwf	displayNumber@result
   754                           
   755                           ;main.c: 28:         number = number / 10 ;
   756  077D  300A               	movlw	10
   757  077E  00F0               	movwf	___awdiv@divisor
   758  077F  3000               	movlw	0
   759  0780  00F1               	movwf	___awdiv@divisor+1
   760  0781  0823               	movf	displayNumber@number+1,w
   761  0782  00F3               	movwf	___awdiv@dividend+1
   762  0783  0822               	movf	displayNumber@number,w
   763  0784  00F2               	movwf	___awdiv@dividend
   764  0785  120A  118A  27A3  120A  118A  	fcall	___awdiv
   765  078A  0871               	movf	?___awdiv+1,w
   766  078B  1283               	bcf	3,5	;RP0=0, select bank0
   767  078C  1303               	bcf	3,6	;RP1=0, select bank0
   768  078D  00A3               	movwf	displayNumber@number+1
   769  078E  0870               	movf	?___awdiv,w
   770  078F  00A2               	movwf	displayNumber@number
   771                           
   772                           ;main.c: 29:         max7219_WriteDigito(pos++, result);
   773  0790  0825               	movf	displayNumber@result,w
   774  0791  00A4               	movwf	??_displayNumber
   775  0792  0824               	movf	??_displayNumber,w
   776  0793  00F8               	movwf	max7219_WriteDigito@valorDeDigito
   777  0794  0827               	movf	displayNumber@pos,w
   778  0795  120A  118A  2623  120A  118A  	fcall	_max7219_WriteDigito
   779  079A  3001               	movlw	1
   780  079B  1283               	bcf	3,5	;RP0=0, select bank0
   781  079C  1303               	bcf	3,6	;RP1=0, select bank0
   782  079D  07A7               	addwf	displayNumber@pos,f
   783  079E  1803               	skipnc
   784  079F  0AA8               	incf	displayNumber@pos+1,f
   785  07A0  3000               	movlw	0
   786  07A1  07A8               	addwf	displayNumber@pos+1,f
   787  07A2  2F5B               	goto	l977
   788  07A3                     __end_of_displayNumber:	
   789                           
   790                           	psect	text4
   791  05EA                     __ptext4:	
   792 ;; *************** function _max7219_Clear *****************
   793 ;; Defined at:
   794 ;;		line 114 in file "./max7219.h"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  i               1    1[BANK0 ] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         0       1       0       0       0
   810 ;;      Temps:          0       1       0       0       0
   811 ;;      Totals:         0       2       0       0       0
   812 ;;Total ram usage:        2 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_max7219_WriteDigito
   817 ;; This function is called by:
   818 ;;		_main
   819 ;;		_displayNumber
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _max7219_Clear
   825  05EA                     _max7219_Clear:	
   826                           
   827                           ;./max7219.h: 115:     for (char i = 0; i < 8; i++) {
   828                           
   829                           ;incstack = 0
   830                           ; Regs used in _max7219_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831  05EA  1283               	bcf	3,5	;RP0=0, select bank0
   832  05EB  1303               	bcf	3,6	;RP1=0, select bank0
   833  05EC  01A1               	clrf	max7219_Clear@i
   834  05ED                     l875:	
   835                           
   836                           ;./max7219.h: 116:         max7219_WriteDigito(i, 0);
   837  05ED  01F8               	clrf	max7219_WriteDigito@valorDeDigito
   838  05EE  0821               	movf	max7219_Clear@i,w
   839  05EF  120A  118A  2623  120A  118A  	fcall	_max7219_WriteDigito
   840                           
   841                           ;./max7219.h: 117:     }
   842  05F4  3001               	movlw	1
   843  05F5  1283               	bcf	3,5	;RP0=0, select bank0
   844  05F6  1303               	bcf	3,6	;RP1=0, select bank0
   845  05F7  00A0               	movwf	??_max7219_Clear
   846  05F8  0820               	movf	??_max7219_Clear,w
   847  05F9  07A1               	addwf	max7219_Clear@i,f
   848  05FA  3008               	movlw	8
   849  05FB  0221               	subwf	max7219_Clear@i,w
   850  05FC  1803               	btfsc	3,0
   851  05FD  0008               	return
   852  05FE  2DED               	goto	l875
   853  05FF                     __end_of_max7219_Clear:	
   854                           
   855                           	psect	text5
   856  0623                     __ptext5:	
   857 ;; *************** function _max7219_WriteDigito *****************
   858 ;; Defined at:
   859 ;;		line 68 in file "./max7219.h"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  digito          1    wreg     unsigned char 
   862 ;;  valorDeDigit    1    8[COMMON] unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  digito          1   11[COMMON] unsigned char 
   865 ;;  temporal        2   12[COMMON] volatile unsigned int 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   875 ;;      Params:         1       0       0       0       0
   876 ;;      Locals:         3       0       0       0       0
   877 ;;      Temps:          2       0       0       0       0
   878 ;;      Totals:         6       0       0       0       0
   879 ;;Total ram usage:        6 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    1
   882 ;; This function calls:
   883 ;;		_max7219_WriteBits
   884 ;; This function is called by:
   885 ;;		_max7219_Clear
   886 ;;		_displayNumber
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _max7219_WriteDigito
   892  0623                     _max7219_WriteDigito:	
   893                           
   894                           ;incstack = 0
   895                           ; Regs used in _max7219_WriteDigito: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   896                           ;max7219_WriteDigito@digito stored from wreg
   897  0623  00FB               	movwf	max7219_WriteDigito@digito
   898                           
   899                           ;./max7219.h: 69:     volatile unsigned int temporal = 0;
   900  0624  01FC               	clrf	max7219_WriteDigito@temporal	;volatile
   901  0625  01FD               	clrf	max7219_WriteDigito@temporal+1	;volatile
   902                           
   903                           ;./max7219.h: 70:     if (digito > 7) {
   904  0626  3008               	movlw	8
   905  0627  027B               	subwf	max7219_WriteDigito@digito,w
   906  0628  1803               	btfsc	3,0
   907  0629  0008               	return
   908                           
   909                           ;./max7219.h: 73:     temporal = digito + 1;
   910  062A  087B               	movf	max7219_WriteDigito@digito,w
   911  062B  3E01               	addlw	1
   912  062C  00FC               	movwf	max7219_WriteDigito@temporal	;volatile
   913  062D  3000               	movlw	0
   914  062E  1803               	skipnc
   915  062F  3001               	movlw	1
   916  0630  00FD               	movwf	max7219_WriteDigito@temporal+1	;volatile
   917                           
   918                           ;./max7219.h: 74:     temporal = temporal << 8;
   919  0631  087C               	movf	max7219_WriteDigito@temporal,w	;volatile
   920  0632  00FA               	movwf	??_max7219_WriteDigito+1
   921  0633  01F9               	clrf	??_max7219_WriteDigito
   922  0634  0879               	movf	??_max7219_WriteDigito,w
   923  0635  00FC               	movwf	max7219_WriteDigito@temporal	;volatile
   924  0636  087A               	movf	??_max7219_WriteDigito+1,w
   925  0637  00FD               	movwf	max7219_WriteDigito@temporal+1	;volatile
   926                           
   927                           ;./max7219.h: 75:     temporal = temporal & 0x0F00;
   928  0638  3000               	movlw	0
   929  0639  057C               	andwf	max7219_WriteDigito@temporal,w	;volatile
   930  063A  00FC               	movwf	max7219_WriteDigito@temporal	;volatile
   931  063B  300F               	movlw	15
   932  063C  057D               	andwf	max7219_WriteDigito@temporal+1,w	;volatile
   933  063D  00FD               	movwf	max7219_WriteDigito@temporal+1	;volatile
   934                           
   935                           ;./max7219.h: 76:     temporal = temporal | digitos[valorDeDigito];
   936  063E  0878               	movf	max7219_WriteDigito@valorDeDigito,w
   937  063F  3E01               	addlw	low ((_digitos-__stringbase)| (0+32768))
   938  0640  0084               	movwf	4
   939  0641  120A  118A  2003  120A  118A  	fcall	stringdir
   940  0646  00F9               	movwf	??_max7219_WriteDigito
   941  0647  087C               	movf	max7219_WriteDigito@temporal,w	;volatile
   942  0648  0479               	iorwf	??_max7219_WriteDigito,w
   943  0649  00FC               	movwf	max7219_WriteDigito@temporal	;volatile
   944  064A  087D               	movf	max7219_WriteDigito@temporal+1,w	;volatile
   945  064B  00FD               	movwf	max7219_WriteDigito@temporal+1	;volatile
   946                           
   947                           ;./max7219.h: 77:     max7219_WriteBits(temporal);
   948  064C  087D               	movf	max7219_WriteDigito@temporal+1,w	;volatile
   949  064D  00F1               	movwf	max7219_WriteBits@valor+1
   950  064E  087C               	movf	max7219_WriteDigito@temporal,w	;volatile
   951  064F  00F0               	movwf	max7219_WriteBits@valor
   952  0650  120A  118A  268B   	fcall	_max7219_WriteBits
   953  0653  0008               	return
   954  0654                     __end_of_max7219_WriteDigito:	
   955                           
   956                           	psect	text6
   957  068B                     __ptext6:	
   958 ;; *************** function _max7219_WriteBits *****************
   959 ;; Defined at:
   960 ;;		line 86 in file "./max7219.h"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  valor           2    0[COMMON] unsigned int 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  temporal        2    5[COMMON] volatile unsigned int 
   965 ;;  c               1    7[COMMON] volatile unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         2       0       0       0       0
   976 ;;      Locals:         3       0       0       0       0
   977 ;;      Temps:          3       0       0       0       0
   978 ;;      Totals:         8       0       0       0       0
   979 ;;Total ram usage:        8 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_max7219_WriteDigito
   985 ;;		_max7219_WriteComando
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _max7219_WriteBits
   991  068B                     _max7219_WriteBits:	
   992                           
   993                           ;./max7219.h: 87:     volatile unsigned int temporal = 0;
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _max7219_WriteBits: [wreg+status,2+status,0]
   997  068B  01F5               	clrf	max7219_WriteBits@temporal	;volatile
   998  068C  01F6               	clrf	max7219_WriteBits@temporal+1	;volatile
   999                           
  1000                           ;./max7219.h: 88:     volatile unsigned char c = 0;
  1001  068D  01F7               	clrf	max7219_WriteBits@c	;volatile
  1002                           
  1003                           ;./max7219.h: 89:     PORTCbits.RC6 = 0;
  1004  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1005  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0690  1307               	bcf	7,6	;volatile
  1007                           
  1008                           ;./max7219.h: 90:     for (c = 0; c < 16; c++) {
  1009  0691  01F7               	clrf	max7219_WriteBits@c	;volatile
  1010  0692                     l829:	
  1011  0692  3010               	movlw	16
  1012  0693  0277               	subwf	max7219_WriteBits@c,w	;volatile
  1013  0694  1803               	btfsc	3,0
  1014  0695  2EC5               	goto	l31
  1015                           
  1016                           ;./max7219.h: 91:         temporal = 1;
  1017  0696  3001               	movlw	1
  1018  0697  00F5               	movwf	max7219_WriteBits@temporal	;volatile
  1019  0698  3000               	movlw	0
  1020  0699  00F6               	movwf	max7219_WriteBits@temporal+1	;volatile
  1021                           
  1022                           ;./max7219.h: 92:         temporal = (temporal << (15 - c));
  1023  069A  0877               	movf	max7219_WriteBits@c,w	;volatile
  1024  069B  3C0F               	sublw	15
  1025  069C  00F2               	movwf	??_max7219_WriteBits
  1026  069D  0AF2               	incf	??_max7219_WriteBits,f
  1027  069E  0876               	movf	max7219_WriteBits@temporal+1,w	;volatile
  1028  069F  00F4               	movwf	??_max7219_WriteBits+2
  1029  06A0  0875               	movf	max7219_WriteBits@temporal,w	;volatile
  1030  06A1  00F3               	movwf	??_max7219_WriteBits+1
  1031  06A2  2EA6               	goto	u294
  1032  06A3                     u295:	
  1033  06A3  1003               	clrc
  1034  06A4  0DF3               	rlf	??_max7219_WriteBits+1,f
  1035  06A5  0DF4               	rlf	??_max7219_WriteBits+2,f
  1036  06A6                     u294:	
  1037  06A6  0BF2               	decfsz	??_max7219_WriteBits,f
  1038  06A7  2EA3               	goto	u295
  1039  06A8  0873               	movf	??_max7219_WriteBits+1,w
  1040  06A9  00F5               	movwf	max7219_WriteBits@temporal	;volatile
  1041  06AA  0874               	movf	??_max7219_WriteBits+2,w
  1042  06AB  00F6               	movwf	max7219_WriteBits@temporal+1	;volatile
  1043                           
  1044                           ;./max7219.h: 93:         if ((temporal & valor) != 0) {
  1045  06AC  0870               	movf	max7219_WriteBits@valor,w
  1046  06AD  0575               	andwf	max7219_WriteBits@temporal,w	;volatile
  1047  06AE  00F2               	movwf	??_max7219_WriteBits
  1048  06AF  0871               	movf	max7219_WriteBits@valor+1,w
  1049  06B0  0576               	andwf	max7219_WriteBits@temporal+1,w	;volatile
  1050  06B1  00F3               	movwf	??_max7219_WriteBits+1
  1051  06B2  0872               	movf	??_max7219_WriteBits,w
  1052  06B3  0473               	iorwf	??_max7219_WriteBits+1,w
  1053  06B4  1903               	btfsc	3,2
  1054  06B5  2EB8               	goto	l32
  1055                           
  1056                           ;./max7219.h: 94:             PORTCbits.RC5 = 1;
  1057  06B6  1687               	bsf	7,5	;volatile
  1058                           
  1059                           ;./max7219.h: 95:         } else {
  1060  06B7  2EB9               	goto	l33
  1061  06B8                     l32:	
  1062                           
  1063                           ;./max7219.h: 96:             PORTCbits.RC5 = 0;
  1064  06B8  1287               	bcf	7,5	;volatile
  1065  06B9                     l33:	
  1066                           ;./max7219.h: 97:         }
  1067                           
  1068                           
  1069                           ;./max7219.h: 98:         PORTCbits.RC7 = 1;
  1070  06B9  1787               	bsf	7,7	;volatile
  1071                           
  1072                           ;./max7219.h: 99:             _delay((unsigned long)((1)*(20000000/4000000.0)));
  1073  06BA  2EBB               	nop2	;2 cycle nop
  1074  06BB  2EBC               	nop2	;2 cycle nop
  1075  06BC  0000               	nop
  1076                           
  1077                           ;./max7219.h: 100:         PORTCbits.RC7 = 0;
  1078  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1079  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1080  06BF  1387               	bcf	7,7	;volatile
  1081                           
  1082                           ;./max7219.h: 101:     }
  1083  06C0  3001               	movlw	1
  1084  06C1  00F2               	movwf	??_max7219_WriteBits
  1085  06C2  0872               	movf	??_max7219_WriteBits,w
  1086  06C3  07F7               	addwf	max7219_WriteBits@c,f	;volatile
  1087  06C4  2E92               	goto	l829
  1088  06C5                     l31:	
  1089                           
  1090                           ;./max7219.h: 102:     PORTCbits.RC6 = 1;
  1091  06C5  1707               	bsf	7,6	;volatile
  1092  06C6  0008               	return
  1093  06C7                     __end_of_max7219_WriteBits:	
  1094                           
  1095                           	psect	text7
  1096  0707                     __ptext7:	
  1097 ;; *************** function ___awmod *****************
  1098 ;; Defined at:
  1099 ;;		line 5 in file "C:\Progranm Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  divisor         2    0[COMMON] int 
  1102 ;;  dividend        2    2[COMMON] int 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  sign            1    6[COMMON] unsigned char 
  1105 ;;  counter         1    5[COMMON] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2    0[COMMON] int 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1115 ;;      Params:         4       0       0       0       0
  1116 ;;      Locals:         2       0       0       0       0
  1117 ;;      Temps:          1       0       0       0       0
  1118 ;;      Totals:         7       0       0       0       0
  1119 ;;Total ram usage:        7 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_displayNumber
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function ___awmod
  1130  0707                     ___awmod:	
  1131                           
  1132                           ;incstack = 0
  1133                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1134  0707  01F6               	clrf	___awmod@sign
  1135  0708  1FF3               	btfss	___awmod@dividend+1,7
  1136  0709  2F11               	goto	l933
  1137  070A  09F2               	comf	___awmod@dividend,f
  1138  070B  09F3               	comf	___awmod@dividend+1,f
  1139  070C  0AF2               	incf	___awmod@dividend,f
  1140  070D  1903               	skipnz
  1141  070E  0AF3               	incf	___awmod@dividend+1,f
  1142  070F  01F6               	clrf	___awmod@sign
  1143  0710  0AF6               	incf	___awmod@sign,f
  1144  0711                     l933:	
  1145  0711  1FF1               	btfss	___awmod@divisor+1,7
  1146  0712  2F18               	goto	l937
  1147  0713  09F0               	comf	___awmod@divisor,f
  1148  0714  09F1               	comf	___awmod@divisor+1,f
  1149  0715  0AF0               	incf	___awmod@divisor,f
  1150  0716  1903               	skipnz
  1151  0717  0AF1               	incf	___awmod@divisor+1,f
  1152  0718                     l937:	
  1153  0718  0870               	movf	___awmod@divisor,w
  1154  0719  0471               	iorwf	___awmod@divisor+1,w
  1155  071A  1903               	btfsc	3,2
  1156  071B  2F45               	goto	l955
  1157  071C  01F5               	clrf	___awmod@counter
  1158  071D  0AF5               	incf	___awmod@counter,f
  1159  071E                     l945:	
  1160  071E  1BF1               	btfsc	___awmod@divisor+1,7
  1161  071F  2F2C               	goto	l947
  1162  0720  3001               	movlw	1
  1163  0721                     u465:	
  1164  0721  1003               	clrc
  1165  0722  0DF0               	rlf	___awmod@divisor,f
  1166  0723  0DF1               	rlf	___awmod@divisor+1,f
  1167  0724  3EFF               	addlw	-1
  1168  0725  1D03               	skipz
  1169  0726  2F21               	goto	u465
  1170  0727  3001               	movlw	1
  1171  0728  00F4               	movwf	??___awmod
  1172  0729  0874               	movf	??___awmod,w
  1173  072A  07F5               	addwf	___awmod@counter,f
  1174  072B  2F1E               	goto	l945
  1175  072C                     l947:	
  1176  072C  0871               	movf	___awmod@divisor+1,w
  1177  072D  0273               	subwf	___awmod@dividend+1,w
  1178  072E  1D03               	skipz
  1179  072F  2F32               	goto	u485
  1180  0730  0870               	movf	___awmod@divisor,w
  1181  0731  0272               	subwf	___awmod@dividend,w
  1182  0732                     u485:	
  1183  0732  1C03               	skipc
  1184  0733  2F3A               	goto	l951
  1185  0734  0870               	movf	___awmod@divisor,w
  1186  0735  02F2               	subwf	___awmod@dividend,f
  1187  0736  0871               	movf	___awmod@divisor+1,w
  1188  0737  1C03               	skipc
  1189  0738  03F3               	decf	___awmod@dividend+1,f
  1190  0739  02F3               	subwf	___awmod@dividend+1,f
  1191  073A                     l951:	
  1192  073A  3001               	movlw	1
  1193  073B                     u495:	
  1194  073B  1003               	clrc
  1195  073C  0CF1               	rrf	___awmod@divisor+1,f
  1196  073D  0CF0               	rrf	___awmod@divisor,f
  1197  073E  3EFF               	addlw	-1
  1198  073F  1D03               	skipz
  1199  0740  2F3B               	goto	u495
  1200  0741  3001               	movlw	1
  1201  0742  02F5               	subwf	___awmod@counter,f
  1202  0743  1D03               	btfss	3,2
  1203  0744  2F2C               	goto	l947
  1204  0745                     l955:	
  1205  0745  0876               	movf	___awmod@sign,w
  1206  0746  1903               	btfsc	3,2
  1207  0747  2F4D               	goto	l959
  1208  0748  09F2               	comf	___awmod@dividend,f
  1209  0749  09F3               	comf	___awmod@dividend+1,f
  1210  074A  0AF2               	incf	___awmod@dividend,f
  1211  074B  1903               	skipnz
  1212  074C  0AF3               	incf	___awmod@dividend+1,f
  1213  074D                     l959:	
  1214  074D  0873               	movf	___awmod@dividend+1,w
  1215  074E  00F1               	movwf	?___awmod+1
  1216  074F  0872               	movf	___awmod@dividend,w
  1217  0750  00F0               	movwf	?___awmod
  1218  0751  0008               	return
  1219  0752                     __end_of___awmod:	
  1220                           
  1221                           	psect	text8
  1222  07A3                     __ptext8:	
  1223 ;; *************** function ___awdiv *****************
  1224 ;; Defined at:
  1225 ;;		line 5 in file "C:\Progranm Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  divisor         2    0[COMMON] int 
  1228 ;;  dividend        2    2[COMMON] int 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  quotient        2    7[COMMON] int 
  1231 ;;  sign            1    6[COMMON] unsigned char 
  1232 ;;  counter         1    5[COMMON] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2    0[COMMON] int 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         4       0       0       0       0
  1243 ;;      Locals:         4       0       0       0       0
  1244 ;;      Temps:          1       0       0       0       0
  1245 ;;      Totals:         9       0       0       0       0
  1246 ;;Total ram usage:        9 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_displayNumber
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function ___awdiv
  1257  07A3                     ___awdiv:	
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1261  07A3  01F6               	clrf	___awdiv@sign
  1262  07A4  1FF1               	btfss	___awdiv@divisor+1,7
  1263  07A5  2FAD               	goto	l889
  1264  07A6  09F0               	comf	___awdiv@divisor,f
  1265  07A7  09F1               	comf	___awdiv@divisor+1,f
  1266  07A8  0AF0               	incf	___awdiv@divisor,f
  1267  07A9  1903               	skipnz
  1268  07AA  0AF1               	incf	___awdiv@divisor+1,f
  1269  07AB  01F6               	clrf	___awdiv@sign
  1270  07AC  0AF6               	incf	___awdiv@sign,f
  1271  07AD                     l889:	
  1272  07AD  1FF3               	btfss	___awdiv@dividend+1,7
  1273  07AE  2FB8               	goto	l895
  1274  07AF  09F2               	comf	___awdiv@dividend,f
  1275  07B0  09F3               	comf	___awdiv@dividend+1,f
  1276  07B1  0AF2               	incf	___awdiv@dividend,f
  1277  07B2  1903               	skipnz
  1278  07B3  0AF3               	incf	___awdiv@dividend+1,f
  1279  07B4  3001               	movlw	1
  1280  07B5  00F4               	movwf	??___awdiv
  1281  07B6  0874               	movf	??___awdiv,w
  1282  07B7  06F6               	xorwf	___awdiv@sign,f
  1283  07B8                     l895:	
  1284  07B8  01F7               	clrf	___awdiv@quotient
  1285  07B9  01F8               	clrf	___awdiv@quotient+1
  1286  07BA  0870               	movf	___awdiv@divisor,w
  1287  07BB  0471               	iorwf	___awdiv@divisor+1,w
  1288  07BC  1903               	btfsc	3,2
  1289  07BD  2FEF               	goto	l917
  1290  07BE  01F5               	clrf	___awdiv@counter
  1291  07BF  0AF5               	incf	___awdiv@counter,f
  1292  07C0                     l905:	
  1293  07C0  1BF1               	btfsc	___awdiv@divisor+1,7
  1294  07C1  2FCE               	goto	l907
  1295  07C2  3001               	movlw	1
  1296  07C3                     u365:	
  1297  07C3  1003               	clrc
  1298  07C4  0DF0               	rlf	___awdiv@divisor,f
  1299  07C5  0DF1               	rlf	___awdiv@divisor+1,f
  1300  07C6  3EFF               	addlw	-1
  1301  07C7  1D03               	skipz
  1302  07C8  2FC3               	goto	u365
  1303  07C9  3001               	movlw	1
  1304  07CA  00F4               	movwf	??___awdiv
  1305  07CB  0874               	movf	??___awdiv,w
  1306  07CC  07F5               	addwf	___awdiv@counter,f
  1307  07CD  2FC0               	goto	l905
  1308  07CE                     l907:	
  1309  07CE  3001               	movlw	1
  1310  07CF                     u385:	
  1311  07CF  1003               	clrc
  1312  07D0  0DF7               	rlf	___awdiv@quotient,f
  1313  07D1  0DF8               	rlf	___awdiv@quotient+1,f
  1314  07D2  3EFF               	addlw	-1
  1315  07D3  1D03               	skipz
  1316  07D4  2FCF               	goto	u385
  1317  07D5  0871               	movf	___awdiv@divisor+1,w
  1318  07D6  0273               	subwf	___awdiv@dividend+1,w
  1319  07D7  1D03               	skipz
  1320  07D8  2FDB               	goto	u395
  1321  07D9  0870               	movf	___awdiv@divisor,w
  1322  07DA  0272               	subwf	___awdiv@dividend,w
  1323  07DB                     u395:	
  1324  07DB  1C03               	skipc
  1325  07DC  2FE4               	goto	l913
  1326  07DD  0870               	movf	___awdiv@divisor,w
  1327  07DE  02F2               	subwf	___awdiv@dividend,f
  1328  07DF  0871               	movf	___awdiv@divisor+1,w
  1329  07E0  1C03               	skipc
  1330  07E1  03F3               	decf	___awdiv@dividend+1,f
  1331  07E2  02F3               	subwf	___awdiv@dividend+1,f
  1332  07E3  1477               	bsf	___awdiv@quotient,0
  1333  07E4                     l913:	
  1334  07E4  3001               	movlw	1
  1335  07E5                     u405:	
  1336  07E5  1003               	clrc
  1337  07E6  0CF1               	rrf	___awdiv@divisor+1,f
  1338  07E7  0CF0               	rrf	___awdiv@divisor,f
  1339  07E8  3EFF               	addlw	-1
  1340  07E9  1D03               	skipz
  1341  07EA  2FE5               	goto	u405
  1342  07EB  3001               	movlw	1
  1343  07EC  02F5               	subwf	___awdiv@counter,f
  1344  07ED  1D03               	btfss	3,2
  1345  07EE  2FCE               	goto	l907
  1346  07EF                     l917:	
  1347  07EF  0876               	movf	___awdiv@sign,w
  1348  07F0  1903               	btfsc	3,2
  1349  07F1  2FF7               	goto	l921
  1350  07F2  09F7               	comf	___awdiv@quotient,f
  1351  07F3  09F8               	comf	___awdiv@quotient+1,f
  1352  07F4  0AF7               	incf	___awdiv@quotient,f
  1353  07F5  1903               	skipnz
  1354  07F6  0AF8               	incf	___awdiv@quotient+1,f
  1355  07F7                     l921:	
  1356  07F7  0878               	movf	___awdiv@quotient+1,w
  1357  07F8  00F1               	movwf	?___awdiv+1
  1358  07F9  0877               	movf	___awdiv@quotient,w
  1359  07FA  00F0               	movwf	?___awdiv
  1360  07FB  0008               	return
  1361  07FC                     __end_of___awdiv:	
  1362  007E                     btemp	set	126	;btemp
  1363  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     14      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _max7219_Config->_max7219_WriteComando
    _max7219_WriteComando->_max7219_WriteBits
    _displayNumber->_max7219_WriteDigito
    _max7219_Clear->_max7219_WriteDigito
    _max7219_WriteDigito->_max7219_WriteBits

Critical Paths under _main in BANK0

    _main->_displayNumber
    _displayNumber->_max7219_Clear

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3980
                                              9 BANK0      5     5      0
                      _displayNumber
                      _max7219_Clear
                     _max7219_Config
 ---------------------------------------------------------------------------------
 (1) _max7219_Config                                       1     1      0     883
                                              0 BANK0      1     1      0
               _max7219_WriteComando
 ---------------------------------------------------------------------------------
 (2) _max7219_WriteComando                                 6     5      1     883
                                              8 COMMON     6     5      1
                  _max7219_WriteBits
 ---------------------------------------------------------------------------------
 (1) _displayNumber                                        7     5      2    2360
                                              2 BANK0      7     5      2
                            ___awdiv
                            ___awmod
                      _max7219_Clear
                _max7219_WriteDigito
 ---------------------------------------------------------------------------------
 (1) _max7219_Clear                                        2     2      0     669
                                              0 BANK0      2     2      0
                _max7219_WriteDigito
 ---------------------------------------------------------------------------------
 (2) _max7219_WriteDigito                                  6     5      1     601
                                              8 COMMON     6     5      1
                  _max7219_WriteBits
 ---------------------------------------------------------------------------------
 (3) _max7219_WriteBits                                    8     6      2     290
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayNumber
     ___awdiv
     ___awmod
     _max7219_Clear
       _max7219_WriteDigito
         _max7219_WriteBits
     _max7219_WriteDigito
       _max7219_WriteBits
   _max7219_Clear
     _max7219_WriteDigito
       _max7219_WriteBits
   _max7219_Config
     _max7219_WriteComando
       _max7219_WriteBits

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Sep 18 16:41:34 2020

                                 pc 0002                         __CFG_CP$OFF 0000  
                                l31 06C5                                  l32 06B8  
                                l33 06B9                        ___awdiv@sign 0076  
                                fsr 0004        __size_of_max7219_WriteDigito 0031  
                       __CFG_LVP$ON 0000                                 l921 07F7  
                               l913 07E4                                 l905 07C0  
                               l907 07CE                                 l917 07EF  
                               l933 0711                                 l829 0692  
                               l951 073A                                 l945 071E  
                               l937 0718                                 l947 072C  
                               l955 0745                                 l875 05ED  
                               l895 07B8                                 l959 074D  
                               l889 07AD                                 l977 075B  
                               l995 06D8                                 u405 07E5  
                      __CFG_CPD$OFF 0000                                 u365 07C3  
                               u525 0766                                 u294 06A6  
                               u295 06A3                                 u385 07CF  
                               u465 0721                                 u545 0702  
                               u395 07DB                                 u485 0732  
                               u557 06EB                                 u495 073B  
             __end_of_max7219_Clear 05FF                                 fsr0 0004  
                      ___awmod@sign 0076                        __CFG_FOSC$HS 0000  
max7219_WriteComando@valorDeComando 0078                      ?_displayNumber 0022  
     __size_of_max7219_WriteComando 0024                        __CFG_WRT$OFF 0000  
                              _main 06C7                                btemp 007E  
            __end_of_max7219_Config 068B                       __CFG_BOREN$ON 0000  
                              start 0000                   _max7219_WriteBits 068B  
                ?_max7219_WriteBits 0070        max7219_WriteComando@temporal 007C  
                             ?_main 0070                     __end_of___awdiv 07FC  
               ??_max7219_WriteBits 0072                       __CFG_WDTE$OFF 0000  
                   __end_of___awmod 0752                     ___awdiv@divisor 0070  
                   ___awdiv@counter 0075                               _TRISB 0086  
                   __end_of_digitos 0013                               main@i 002C  
                             pclath 000A                               status 0003  
                             wtemp0 007E           __end_of_max7219_WriteBits 06C7  
                   ?_max7219_Config 0070                     __initialization 07FC  
                      __end_of_main 0707                 displayNumber@number 0022  
               displayNumber@result 0025                              ??_main 0029  
                   ??_displayNumber 0024                    ___awdiv@dividend 0072  
         max7219_WriteDigito@digito 007B           max7219_WriteBits@temporal 0075  
                    __CFG_PWRTE$OFF 0000                           ??___awdiv 0074  
                         ??___awmod 0074                    ___awdiv@quotient 0077  
                   ___awmod@divisor 0070                     ___awmod@counter 0075  
           __end_of__initialization 07FC                 _max7219_WriteDigito 0623  
        __size_of_max7219_WriteBits 003C                      __pcstackCOMMON 0070  
              ?_max7219_WriteDigito 0078              max7219_WriteBits@valor 0070  
                        __pmaintext 06C7        __end_of_max7219_WriteComando 0623  
             ??_max7219_WriteDigito 0079                    ??_max7219_Config 0020  
                        __stringtab 0003              __size_of_max7219_Clear 0015  
                           ___awdiv 07A3                             ___awmod 0707  
                           _digitos 0009                             __ptext1 0654  
                           __ptext2 05FF                             __ptext3 0752  
                           __ptext4 05EA                             __ptext5 0623  
                           __ptext6 068B                             __ptext7 0707  
                           __ptext8 07A3                    ___awmod@dividend 0072  
              end_of_initialization 07FC                           _PORTCbits 0007  
                     _max7219_Clear 05EA                           _TRISCbits 0087  
             __end_of_displayNumber 07A3                _max7219_WriteComando 05FF  
       max7219_WriteComando@comando 007B                      max7219_Clear@i 0021  
                    ?_max7219_Clear 0070                 start_initialization 07FC  
             ?_max7219_WriteComando 0078                           ___latbits 0002  
                     __pcstackBANK0 0020         __end_of_max7219_WriteDigito 0654  
                          ?___awdiv 0070                            ?___awmod 0070  
                         __pstrings 0003                     ??_max7219_Clear 0020  
            ??_max7219_WriteComando 0079                         __stringbase 0008  
                  displayNumber@pos 0027             __size_of_max7219_Config 0037  
                  __size_of___awdiv 0059                    __size_of___awmod 004B  
                __end_of__stringtab 0009                       __size_of_main 0040  
            __size_of_displayNumber 0051                  max7219_WriteBits@c 0077  
  max7219_WriteDigito@valorDeDigito 0078                           stringcode 0003  
       max7219_WriteDigito@temporal 007C                            stringdir 0003  
                          stringtab 0003                       _displayNumber 0752  
                    _max7219_Config 0654  
